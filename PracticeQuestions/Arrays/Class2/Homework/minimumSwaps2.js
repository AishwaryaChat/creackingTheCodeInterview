/*
Minimum Swaps 2

Problem Description
Given an array of integers A of size N that is a permutation of [0, 1, 2, ..., (N-1)]. It is allowed to swap any two elements (not necessarily consecutive).

Find the minimum number of swaps required to sort the array in ascending order.



Problem Constraints
1 <= N <= 100000
0 <= A[i] < N



Input Format
The only argument given is the integer array A.



Output Format
Return the minimum number of swaps.



Example Input
Input 1:

A = [1, 2, 3, 4, 0]
Input 2:

A = [2, 0, 1, 3]


Example Output
Output 1:

4
Output 2:

2


Example Explanation
Explanation 1:

 If you swap (1, 2) -> (2, 3) -> (4, 0) -> (3, 0). You will get a sorted array.
 You cannot sort it with lesser swaps.
Explanation 2:

 You cannot sort it with lesser than 2 swaps.
*/
// TC=O(N)
// swap the elements if it is not at its correct position, that's it
function solve(A) {
    let swaps = 0
    let i=0
    while(i<A.length) {
        if(A[i] !== i) {
            const temp = A[i]
            A[i] = A[temp]
            A[temp] = temp
            swaps++
        } else {
            i++
        }
    }
    return swaps
}

// const A = [ 6, 50, 16, 30, 37, 12, 43, 52, 24, 2, 53, 28, 31, 36, 10, 32, 51, 60, 64, 38, 3, 46, 7, 4, 55, 72, 75, 66, 73, 68, 54, 22, 25, 65, 5, 49, 0, 8, 47, 78, 35, 57, 83, 90, 27, 9, 19, 26, 76, 41, 39, 40, 1, 11, 67, 61, 71, 56, 58, 108, 110, 102, 15, 70, 59, 14, 42, 23, 29, 20, 118, 13, 106, 17, 69, 18, 21, 34, 44, 62, 33, 80, 45, 87, 48, 63, 74, 131, 134, 111, 77, 79, 81, 139, 132, 124, 82, 84, 85, 86, 88, 89, 91, 92, 93, 130, 94, 98, 95, 96, 151, 97, 99, 100, 109, 101, 142, 103, 143, 104, 105, 146, 107, 112, 113, 138, 114, 115, 116, 117, 160, 119, 120, 148, 145, 121, 122, 123, 125, 126, 127, 135, 128, 153, 129, 133, 144, 136, 137, 140, 141, 147, 149, 150, 152, 154, 155, 156, 157, 158, 159 ]

// 154

// const A = [7, 3, 1, 2, 5, 0, 6, 4]

const A = [ 16, 37, 23, 32, 28, 17, 22, 14, 11, 57, 3, 10, 36, 21, 64, 33, 35, 26, 6, 13, 15, 18, 27, 4, 42, 68, 65, 38, 29, 77, 40, 30, 47, 34, 60, 69, 70, 39, 41, 80, 43, 1, 89, 5, 72, 78, 83, 84, 31, 44, 19, 90, 74, 61, 91, 55, 20, 98, 45, 100, 46, 73, 49, 48, 50, 99, 51, 52, 53, 54, 24, 25, 2, 113, 56, 58, 103, 59, 92, 62, 63, 66, 93, 101, 7, 67, 76, 71, 75, 8, 79, 9, 81, 82, 85, 96, 86, 12, 87, 88, 94, 95, 126, 97, 102, 114, 104, 119, 140, 143, 154, 118, 105, 145, 106, 160, 107, 108, 147, 109, 158, 110, 111, 112, 115, 116, 127, 117, 176, 120, 121, 122, 123, 124, 165, 125, 128, 129, 130, 131, 132, 133, 134, 192, 135, 136, 137, 177, 138, 139, 187, 141, 191, 142, 144, 146, 148, 149, 199, 150, 151, 152, 153, 188, 155, 170, 156, 157, 159, 161, 162, 163, 164, 172, 198, 166, 167, 178, 168, 169, 171, 173, 174, 214, 212, 175, 194, 179, 180, 219, 181, 182, 183, 184, 185, 186, 242, 189, 190, 193, 195, 196, 197, 200, 209, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 225, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 258, 240, 241, 243, 244, 245, 259, 246, 247, 274, 248, 249, 250, 251, 280, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 0 ]

console.log(solve(A))